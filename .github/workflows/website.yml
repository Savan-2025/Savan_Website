name: Deploy Savan Backend App (main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Create a clean archive of the repo at HEAD (excludes .git)
      - name: Package code
        run: |
          git archive --format=tar.gz -o deploy.tgz HEAD
          ls -lh deploy.tgz

      - name: Upload code to server (scp)
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.SSH_USER_NAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "deploy.tgz"
          target: "/tmp/savan_website_deploy/"

      - name: Install, restart with PM2 (root), reload Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.SSH_USER_NAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euo pipefail

            # --- Paths (adjust APP_DIR if needed) ---
            APP_DIR="/home/saajra/htdocs/saajra.com"
            TMP_DIR="/tmp/savan_website_deploy"

            # Ensure dirs exist and owned by root (since PM2 runs as root)
            sudo mkdir -p "$APP_DIR" "$TMP_DIR"
            sudo chown -R root:root "$APP_DIR" "$TMP_DIR"

            # Place/overwrite the code into app directory
            # (If you prefer atomic deploys, switch to releases + symlink)
            sudo tar -xzf "$TMP_DIR/deploy.tgz" -C "$APP_DIR"

            # Run the rest in a ROOT login shell so we hit the same PM2 instance
            sudo -i bash <<'EOS'
            set -euo pipefail

            export PM2_HOME="/root/.pm2"   # Use root's PM2 list
            APP_DIR="/home/saajra/htdocs/saajra.com"

            cd "$APP_DIR"

            # Optional: use root's nvm if present; else system node
            if [ -s "/root/.nvm/nvm.sh" ]; then
              export NVM_DIR="/root/.nvm"
              . "$NVM_DIR/nvm.sh"
              nvm install --lts >/dev/null 2>&1 || true
              nvm use --lts
              hash -r
            fi

            # Ensure pm2 exists (harmless if already installed)
            if ! command -v pm2 >/dev/null 2>&1; then
              npm i -g pm2
            fi

            node -v
            npm -v
            pm2 -v

            # Install deps & build
            if [ -f package-lock.json ]; then
              npm ci --no-audit --no-fund
            else
              npm install --no-audit --no-fund
            fi

            # If you have a build step, keep this; else remove
            if npm run | grep -qE '^  build'; then
              npm run build
            fi

            # Restart existing root-owned process; else start fresh
            if pm2 describe savan-website-app >/dev/null 2>&1; then
              pm2 restart savan-website-app --update-env
            else
              PORT=3003 pm2 start npm --name "savan-website-app" -- start
            fi

            pm2 save
            # Ensure PM2 resurrects on boot for root (idempotent)
            pm2 startup systemd -u root --hp /root >/dev/null 2>&1 || true
            EOS

            # Reload nginx (restart as fallback)
            sudo systemctl reload nginx || sudo systemctl restart nginx
